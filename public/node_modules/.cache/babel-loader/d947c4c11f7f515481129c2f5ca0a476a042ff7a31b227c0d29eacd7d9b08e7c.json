{"ast":null,"code":"var _jsxFileName = \"D:\\\\22IT140\\\\sem 4\\\\react\\\\chatapp\\\\public\\\\src\\\\components\\\\ChatInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Picker from \"emoji-picker-react\";\nimport { BsEmojiSmileFill } from \"react-icons/bs\";\nimport { IoMdSend } from \"react-icons/io\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatInput({\n  handleSendMsg\n}) {\n  _s();\n  const [msg, setMsg] = useState(\"\");\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const toggleEmojiPicker = () => {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n  const handleEmojiClick = (event, emojiObject) => {\n    setMsg(prevMsg => prevMsg + emojiObject.emoji);\n  };\n  const sendChat = event => {\n    event.preventDefault();\n    if (msg.trim() !== \"\") {\n      handleSendMsg(msg);\n      setMsg(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emoji\",\n        children: [/*#__PURE__*/_jsxDEV(BsEmojiSmileFill, {\n          onClick: toggleEmojiPicker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), showEmojiPicker && /*#__PURE__*/_jsxDEV(Picker, {\n          onEmojiClick: handleEmojiClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-container\",\n      onSubmit: sendChat,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message here\",\n        onChange: e => setMsg(e.target.value),\n        value: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(IoMdSend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatInput, \"BEbOaGFGj4PENMmZ+3rZXgHEfFI=\");\n_c = ChatInput;\nconst Container = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-columns: 5% 95%;\n  background-color: #080420;\n  padding: 0 2rem;\n\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\n    padding: 0 1rem;\n    gap: 1rem;\n  }\n\n  .button-container {\n    display: flex;\n    align-items: center;\n    color: white;\n    gap: 1rem;\n\n    .emoji {\n      position: relative;\n\n      svg {\n        font-size: 1.5rem;\n        color: #ffff00c8;\n        cursor: pointer;\n      }\n\n      .emoji-picker-react {\n        position: absolute;\n        top: 50px; /* Adjust as needed */\n        right: 0;\n        z-index: 1;\n        /* Your other styles for the emoji picker */\n      }\n    }\n  }\n\n  .input-container {\n    width: 100%;\n    border-radius: 2rem;\n    display: flex;\n    align-items: center;\n    gap: 2rem;\n    background-color: #ffffff34;\n\n    input {\n      width: 90%;\n      height: 60%;\n      background-color: transparent;\n      color: white;\n      border: none;\n      padding-left: 1rem;\n      font-size: 1.2rem;\n\n      &::selection {\n        background-color: #9a86f3;\n      }\n\n      &:focus {\n        outline: none;\n      }\n    }\n\n    button {\n      padding: 0.3rem 2rem;\n      border-radius: 2rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: #9a86f3;\n      border: none;\n\n      @media screen and (min-width: 720px) and (max-width: 1080px) {\n        padding: 0.3rem 1rem;\n        svg {\n          font-size: 1rem;\n        }\n      }\n\n      svg {\n        font-size: 2rem;\n        color: white;\n      }\n    }\n  }\n`;\n_c2 = Container;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChatInput\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useState","styled","Picker","BsEmojiSmileFill","IoMdSend","jsxDEV","_jsxDEV","ChatInput","handleSendMsg","_s","msg","setMsg","showEmojiPicker","setShowEmojiPicker","toggleEmojiPicker","handleEmojiClick","event","emojiObject","prevMsg","emoji","sendChat","preventDefault","trim","Container","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onEmojiClick","onSubmit","type","placeholder","onChange","e","target","value","_c","div","_c2","$RefreshReg$"],"sources":["D:/22IT140/sem 4/react/chatapp/public/src/components/ChatInput.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Picker from \"emoji-picker-react\";\r\nimport { BsEmojiSmileFill } from \"react-icons/bs\";\r\nimport { IoMdSend } from \"react-icons/io\";\r\n\r\nexport default function ChatInput({ handleSendMsg }) {\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n\r\n  const toggleEmojiPicker = () => {\r\n    setShowEmojiPicker(!showEmojiPicker);\r\n  };\r\n\r\n  const handleEmojiClick = (event, emojiObject) => {\r\n    setMsg(prevMsg => prevMsg + emojiObject.emoji);\r\n  };\r\n\r\n  const sendChat = (event) => {\r\n    event.preventDefault();\r\n    if (msg.trim() !== \"\") {\r\n      handleSendMsg(msg);\r\n      setMsg(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"button-container\">\r\n        <div className=\"emoji\">\r\n          <BsEmojiSmileFill onClick={toggleEmojiPicker} />\r\n          {showEmojiPicker && <Picker onEmojiClick={handleEmojiClick} />}\r\n        </div>\r\n      </div>\r\n      <form className=\"input-container\" onSubmit={sendChat}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message here\"\r\n          onChange={(e) => setMsg(e.target.value)}\r\n          value={msg}\r\n        />\r\n        <button type=\"submit\">\r\n          <IoMdSend />\r\n        </button>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  grid-template-columns: 5% 95%;\r\n  background-color: #080420;\r\n  padding: 0 2rem;\r\n\r\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n    padding: 0 1rem;\r\n    gap: 1rem;\r\n  }\r\n\r\n  .button-container {\r\n    display: flex;\r\n    align-items: center;\r\n    color: white;\r\n    gap: 1rem;\r\n\r\n    .emoji {\r\n      position: relative;\r\n\r\n      svg {\r\n        font-size: 1.5rem;\r\n        color: #ffff00c8;\r\n        cursor: pointer;\r\n      }\r\n\r\n      .emoji-picker-react {\r\n        position: absolute;\r\n        top: 50px; /* Adjust as needed */\r\n        right: 0;\r\n        z-index: 1;\r\n        /* Your other styles for the emoji picker */\r\n      }\r\n    }\r\n  }\r\n\r\n  .input-container {\r\n    width: 100%;\r\n    border-radius: 2rem;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 2rem;\r\n    background-color: #ffffff34;\r\n\r\n    input {\r\n      width: 90%;\r\n      height: 60%;\r\n      background-color: transparent;\r\n      color: white;\r\n      border: none;\r\n      padding-left: 1rem;\r\n      font-size: 1.2rem;\r\n\r\n      &::selection {\r\n        background-color: #9a86f3;\r\n      }\r\n\r\n      &:focus {\r\n        outline: none;\r\n      }\r\n    }\r\n\r\n    button {\r\n      padding: 0.3rem 2rem;\r\n      border-radius: 2rem;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      background-color: #9a86f3;\r\n      border: none;\r\n\r\n      @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n        padding: 0.3rem 1rem;\r\n        svg {\r\n          font-size: 1rem;\r\n        }\r\n      }\r\n\r\n      svg {\r\n        font-size: 2rem;\r\n        color: white;\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}