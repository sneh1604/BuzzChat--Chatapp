{"ast":null,"code":"var _jsxFileName = \"D:\\\\22IT140\\\\sem 4\\\\react\\\\chatapp\\\\public\\\\src\\\\pages\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { allUsersRoute } from \"../utils/APIRoutes\";\nimport Contacts from \"../components/Contacts\";\nimport Welcome from \"../components/Welcome\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat() {\n  _s();\n  const navigate = useNavigate();\n  const [contacts, setContacts] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      try {\n        const userData = localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY);\n        if (!userData) {\n          navigate(\"/login\");\n        } else {\n          const parsedUserData = JSON.parse(userData);\n          setCurrentUser(parsedUserData);\n          if (parsedUserData.isAvatarImageSet) {\n            const {\n              data\n            } = await axios.get(`${allUsersRoute}/${parsedUserData._id}`);\n            setContacts(data);\n          } else {\n            navigate(\"/setAvatar\");\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    };\n    fetchCurrentUser();\n  }, [navigate]);\n  const handleChatChange = chat => {\n    setCurrentChat(chat);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Contacts, {\n        contacts: contacts,\n        changeChat: handleChatChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), !currentChat && /*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"uOXJ65/hDOtO4Te/3b9GRlNxvM8=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 1rem;\n  align-items: center;\n  background-color: #131324;\n\n  .container {\n    height: 85vh;\n    width: 85vw;\n    background-color: #00000076;\n    display: grid;\n    grid-template-columns: 25% 75%;\n\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\n      grid-template-columns: 35% 65%;\n    }\n  }\n`;\n_c2 = Container;\nvar _c, _c2;\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","styled","allUsersRoute","Contacts","Welcome","jsxDEV","_jsxDEV","Chat","_s","navigate","contacts","setContacts","currentChat","setCurrentChat","currentUser","setCurrentUser","fetchCurrentUser","userData","localStorage","getItem","process","env","REACT_APP_LOCALHOST_KEY","parsedUserData","JSON","parse","isAvatarImageSet","data","get","_id","error","console","handleChatChange","chat","Container","children","className","changeChat","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","_c2","$RefreshReg$"],"sources":["D:/22IT140/sem 4/react/chatapp/public/src/pages/Chat.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { allUsersRoute } from \"../utils/APIRoutes\";\r\nimport Contacts from \"../components/Contacts\";\r\nimport Welcome from \"../components/Welcome\";\r\n\r\nexport default function Chat() {\r\n  const navigate = useNavigate();\r\n  const [contacts, setContacts] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCurrentUser = async () => {\r\n      try {\r\n        const userData = localStorage.getItem(process.env.REACT_APP_LOCALHOST_KEY);\r\n        if (!userData) {\r\n          navigate(\"/login\");\r\n        } else {\r\n          const parsedUserData = JSON.parse(userData);\r\n          setCurrentUser(parsedUserData);\r\n          if (parsedUserData.isAvatarImageSet) {\r\n            const { data } = await axios.get(`${allUsersRoute}/${parsedUserData._id}`);\r\n            setContacts(data);\r\n          } else {\r\n            navigate(\"/setAvatar\");\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n      }\r\n    };\r\n    fetchCurrentUser();\r\n  }, [navigate]);\r\n\r\n  const handleChatChange = (chat) => {\r\n    setCurrentChat(chat);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"container\">\r\n        <Contacts contacts={contacts} changeChat={handleChatChange} />\r\n        {!currentChat && <Welcome />}\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  background-color: #131324;\r\n\r\n  .container {\r\n    height: 85vh;\r\n    width: 85vw;\r\n    background-color: #00000076;\r\n    display: grid;\r\n    grid-template-columns: 25% 75%;\r\n\r\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n      grid-template-columns: 35% 65%;\r\n    }\r\n  }\r\n`;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}