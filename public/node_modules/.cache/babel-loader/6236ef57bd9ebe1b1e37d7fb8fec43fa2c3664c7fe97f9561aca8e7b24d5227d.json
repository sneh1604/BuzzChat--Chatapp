{"ast":null,"code":"var _jsxFileName = \"D:\\\\22IT140\\\\sem 4\\\\react\\\\chatapp\\\\public\\\\src\\\\pages\\\\SetAvtar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components'; // Import styled component\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n// Import Container from where it's defined\nimport { Container } from '../path/to/Container'; // Update the path accordingly\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SetAvtar() {\n  _s();\n  const api = \"https://api.multiavtar.com/457845\";\n  const navigate = useNavigate();\n  const [avtars, setAvtars] = useState([]);\n  const [selectedAvtar, setSelectedAvtar] = useState(undefined);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = [];\n        for (let i = 0; i < 4; i++) {\n          const image = await axios.get(`${api}/${Math.round(Math.random() * 1000)}`);\n          const buffer = new Buffer.from(image.data);\n          data.push(buffer.toString(\"base64\"));\n        }\n        setAvtars(data);\n      } catch (error) {\n        console.error(\"Error fetching avatars:\", error);\n        // Handle error (e.g., show toast)\n        toast.error(\"Failed to fetch avatars. Please try again later.\");\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Pick Any Avtar for your profile picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avtars\",\n        children: avtars.map((avatar, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `avatar ${selectedAvtar === index ? \"selected\" : \"\"}`,\n          onClick: () => setSelectedAvtar(index),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/svg+xml;base64,${avatar}`,\n            alt: \"avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(SetAvtar, \"ee//4fPodtOCKrSQVq6nxI3FEBA=\", false, function () {\n  return [useNavigate];\n});\n_c = SetAvtar;\nvar _c;\n$RefreshReg$(_c, \"SetAvtar\");","map":{"version":3,"names":["React","useState","useEffect","styled","useNavigate","axios","toast","Container","jsxDEV","_jsxDEV","Fragment","_Fragment","SetAvtar","_s","api","navigate","avtars","setAvtars","selectedAvtar","setSelectedAvtar","undefined","fetchData","data","i","image","get","Math","round","random","buffer","Buffer","from","push","toString","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","avatar","index","onClick","src","alt","_c","$RefreshReg$"],"sources":["D:/22IT140/sem 4/react/chatapp/public/src/pages/SetAvtar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components'; // Import styled component\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n// Import Container from where it's defined\r\nimport { Container } from '../path/to/Container'; // Update the path accordingly\r\n\r\nexport default function SetAvtar() {\r\n    const api = \"https://api.multiavtar.com/457845\";\r\n    const navigate = useNavigate();\r\n    const [avtars, setAvtars] = useState([]);\r\n    const [selectedAvtar, setSelectedAvtar] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const data = [];\r\n                for (let i = 0; i < 4; i++) {\r\n                    const image = await axios.get(\r\n                        `${api}/${Math.round(Math.random() * 1000)}`\r\n                    );\r\n                    const buffer = new Buffer.from(image.data);\r\n                    data.push(buffer.toString(\"base64\"));\r\n                }\r\n                setAvtars(data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching avatars:\", error);\r\n                // Handle error (e.g., show toast)\r\n                toast.error(\"Failed to fetch avatars. Please try again later.\");\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <div className='title-container'>\r\n                    <h1>Pick Any Avtar for your profile picture</h1>\r\n                </div>\r\n                <div className=\"avtars\">\r\n                    {avtars.map((avatar, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className={`avatar ${selectedAvtar === index ? \"selected\" : \"\"}`}\r\n                            onClick={() => setSelectedAvtar(index)}\r\n                        >\r\n                            <img\r\n                                src={`data:image/svg+xml;base64,${avatar}`}\r\n                                alt=\"avatar\"\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}