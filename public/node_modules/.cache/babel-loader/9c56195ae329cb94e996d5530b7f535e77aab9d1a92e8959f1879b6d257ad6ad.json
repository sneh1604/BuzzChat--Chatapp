{"ast":null,"code":"var _jsxFileName = \"D:\\\\22IT140\\\\sem 4\\\\react\\\\chatapp\\\\public\\\\src\\\\pages\\\\SetAvtar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom'; // Import Link component\nimport loader from '../assets/loader.gif';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from \"axios\";\nimport { setAvtarRoute } from '../utils/APIRoutes';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SetAvtar() {\n  _s();\n  const api = \"https://api.multiavtar.com/457845\";\n  const navigate = useNavigate();\n  const [avtars, setAvtars] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedAvtar, setSelectedAvtar] = useState(undefined);\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 8000,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"dark\"\n  };\n  const setProfilePicture = async () => {};\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = [];\n        for (let i = 0; i < 4; i++) {\n          const image = await axios.get(`${api}/${Math.round(Math.random() * 1000)}`);\n          const buffer = new Buffer(image.data);\n          data.push(buffer.toString(\"base64\"));\n        }\n        setAvtars(data);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching avatars:\", error);\n        // Handle error (e.g., show toast)\n        toast.error(\"Failed to fetch avatars. Please try again later.\");\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Pick Any Avtar for your profile picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avtars\",\n        children: avtars.map((avatar, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `avatar ${selectedAvtar === index ? \"selected\" : \"\"}`,\n          onClick: () => setSelectedAvtar(index),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/svg+xml;base64,${avatar}`,\n            alt: \"avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(SetAvtar, \"7/z3BwWkAtwy4XW+FXjnVXsljAo=\", false, function () {\n  return [useNavigate];\n});\n_c = SetAvtar;\nvar _c;\n$RefreshReg$(_c, \"SetAvtar\");","map":{"version":3,"names":["React","useState","useEffect","styled","useNavigate","loader","ToastContainer","toast","axios","setAvtarRoute","jsxDEV","_jsxDEV","Fragment","_Fragment","SetAvtar","_s","api","navigate","avtars","setAvtars","isLoading","setIsLoading","selectedAvtar","setSelectedAvtar","undefined","toastOptions","position","autoClose","pauseOnHover","draggable","theme","setProfilePicture","fetchData","data","i","image","get","Math","round","random","buffer","Buffer","push","toString","error","console","children","Container","className","fileName","_jsxFileName","lineNumber","columnNumber","map","avatar","index","onClick","src","alt","_c","$RefreshReg$"],"sources":["D:/22IT140/sem 4/react/chatapp/public/src/pages/SetAvtar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useNavigate } from 'react-router-dom'; // Import Link component\r\nimport loader from '../assets/loader.gif';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from \"axios\";\r\nimport { setAvtarRoute } from '../utils/APIRoutes';\r\n\r\nexport default function SetAvtar() {\r\n    const api = \"https://api.multiavtar.com/457845\";\r\n    const navigate = useNavigate();\r\n    const [avtars, setAvtars] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [selectedAvtar, setSelectedAvtar] = useState(undefined);\r\n    const toastOptions = {\r\n        position: \"bottom-right\",\r\n        autoClose: 8000,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        theme: \"dark\"\r\n    };\r\n\r\n    const setProfilePicture = async () => {};\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const data = [];\r\n                for (let i = 0; i < 4; i++) {\r\n                    const image = await axios.get(\r\n                        `${api}/${Math.round(Math.random() * 1000)}`\r\n                    );\r\n                    const buffer = new Buffer(image.data);\r\n                    data.push(buffer.toString(\"base64\"));\r\n                }\r\n                setAvtars(data);\r\n                setIsLoading(false);\r\n            } catch (error) {\r\n                console.error(\"Error fetching avatars:\", error);\r\n                // Handle error (e.g., show toast)\r\n                toast.error(\"Failed to fetch avatars. Please try again later.\");\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <div className='title-container'>\r\n                    <h1>Pick Any Avtar for your profile picture</h1>\r\n                </div>\r\n                <div className=\"avtars\">\r\n                    {avtars.map((avatar, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className={`avatar ${selectedAvtar === index ? \"selected\" : \"\"}`}\r\n                            onClick={() => setSelectedAvtar(index)}\r\n                        >\r\n                            <img\r\n                                src={`data:image/svg+xml;base64,${avatar}`}\r\n                                alt=\"avatar\"\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}